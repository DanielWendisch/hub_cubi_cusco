---
title: "bulk_check"
format: html
editor: visual
---
```{r}
# Load the necessary library
library(purrr)
library(readxl)
library(tidyverse)
library(janitor)

```
```{r}
path_raw_data_file <- "..\\..\\raw_data\\cubi_cusco"

path_input<- paste(sep = "\\", path_raw_data_file, "hub_01_02_bulk")

ensembl <- biomaRt::useMart("ensembl", dataset = "hsapiens_gene_ensembl")

```

```{r}
all_files <- list.files(path="../../raw_data/cubi_cusco/hub_01_02_bulk", recursive = T, pattern = "all_mates.feature_counts", full.names = T)
all_files <- list.files(path="../../raw_data/cubi_cusco/hub_01_02_bulk", recursive = T, pattern = "all_mates.feature_counts", full.names = T)

# Step 2: Filter out files that contain "summary" in their name
filtered_files <- grep("summary", all_files, invert = TRUE, value = TRUE)

# Step 3: Use purrr::map to read the filtered files into a list
file_list <- map(filtered_files, ~ read.table(.x, header = TRUE))

# Optionally, name the list elements by the file names (without the path)
names(file_list) <- basename(filtered_files)

# Now file_list contains the data frames from each file
combined_table <- map(file_list, ~ .x[[7]]) |>
  bind_cols()
colnames_tbl <- names(combined_table)
names(combined_table) <- sub("feature_counts\\.([^.]+)\\..*", "\\1", colnames_tbl)

combined_table$ensembl_gene_id <-  file_list[[1]][,1]


)
```
```{r}
dings <- file_list$`feature_counts.GEX-BLK_0065_3pseq.all_lanes.all_mates.feature_counts` |> head() |> as_tibble()

starts <- dings[1,] |> pull("Start") |> 
  strsplit(split = ";") |>
  unlist() |>
  as.numeric()

ends<- dings[1,] |> pull("End") |> 
  strsplit(split = ";") |>
  unlist() |>
  as.numeric()
starts
ends
diffs <- ends-starts 
sum(diffs)
dings[1,"Length"]
```

```{r}
# Example list of Ensembl gene IDs

# Query to convert Ensembl IDs to gene names
gene_info <- biomaRt::getBM(
  attributes = c("ensembl_gene_id", "external_gene_name"),
  filters = "ensembl_gene_id",
  values = combined_table$ensembl_gene_id ,
  mart = ensembl
)

colnames(gene_info)[2] <- "gene"

combined_table <- left_join(combined_table,gene_info) |> relocate(gene,ensembl_gene_id)
combined_table |> write.csv(paste(path_raw_data_file,"hub_01_02_bulk\\counts_table_hub_01_02.csv", sep = "\\"))
```
```{r}
# save gene lengths
file_list$`feature_counts.GEX-BLK_0065_3pseq.all_lanes.all_mates.feature_counts` |> as_tibble() |> select(Geneid, Length) |> rename(Geneid="ensembl_gene_id"
)|> left_join(gene_info) |> relocate(gene,ensembl_gene_id) |> write.csv(paste(path_raw_data_file,"hub_01_02_bulk\\gene_lengths.csv", sep = "\\"))
```

```{r}
filtered_genes<- combined_table %>%
  filter(grepl("[A-Za-z]", gene)) |> select(-ensembl_gene_id)
```

```{r}
library(DESeq2)

#names(filtered_genes)
#list.files("../../raw_data/cubi_cusco/hub_01_02_bulk")

meta_data <- read_xlsx("../../raw_data/cubi_cusco/hub_01_02_bulk/a_HUB_model_characterisation_GEX_polyA_transcription_profiling.xlsx")

names(meta_data) <- meta_data[1,]
meta_data <- meta_data[-1,]
meta_data <- meta_data |> clean_names()

meta_data |> glimpse()

meta_data$co |> unique()

meta_data |> filter(co=="hLOA")
```

```{r}
names(filtered_genes)
list.files("../../raw_data/cubi_cusco/hub_01_02_bulk")

meta_data <- read_xlsx("../../raw_data/cubi_cusco/hub_01_02_bulk/a_HUB_model_characterisation_GEX_3pseq_transcription_profiling.xlsx")

names(meta_data) <- meta_data[1,]
meta_data <- meta_data[-1,]
meta_data <- meta_data |> clean_names()

meta_data |> glimpse()

```

```{r}
meta_data <- meta_data |> select(name_4,name,name_2,experiment_identifier, tissue_type,rna_amount_ng,tapestation_qc_rin,perform_date_4,differentiation_duration, condition, treatment, treatment_duration            )

colnames(meta_data) <- c("sample","cell_line","name_2","experiment_identifier", "tissue_type","rna_amount_ng","tapestation_qc_rin","perform_date_4","differentiation_duration", "condition", "treatment", "treatment_duration"            )
meta_data
```






```{r}
hub_01_meta_data <- meta_data |> filter(experiment_identifier=="HUB_01")

sample_names <- hub_01_meta_data$sample


hub_01_bulk <- filtered_genes[,c("gene",sample_names)]
hub_01_bulk_mtx <- hub_01_bulk |> select(-gene) |> as.matrix()
rownames(hub_01_bulk_mtx) <- hub_01_bulk$gene

dds <- DESeqDataSetFromMatrix(
    countData = hub_01_bulk_mtx,
    colData = hub_01_meta_data,
    design = ~ condition
)

```


```{r}
hub_01_02_meta_data <- meta_data |> filter(experiment_identifier %in% c("HUB_01", "HUB_02"))

sample_names <- hub_01_02_meta_data$sample


hub_01_02_bulk <- filtered_genes[,c("gene",sample_names)]
hub_01_02_bulk_mtx <- hub_01_02_bulk |> select(-gene) |> as.matrix()
rownames(hub_01_02_bulk_mtx) <- hub_01_02_bulk$gene

dds <- DESeqDataSetFromMatrix(
    countData = hub_01_02_bulk_mtx,
    colData = hub_01_02_meta_data,
    design = ~ experiment_identifier + cell_line
)
dds <- dds[rowSums(counts(dds)) > 10, ]
dds <- DESeq(dds)
results_table <- results(dds, )
summary(results_table)
```


```{r}
plotMA(results_table, main = "MA-Plot", ylim = c(-4, 4))


```



```{r}
plotDispEsts(dds)

```



```{r}
library(ggplot2)
ggplot(as.data.frame(results_table), aes(x = log2FoldChange, y = -log10(padj))) +
  geom_point(alpha = 0.4) +
  theme_minimal() +
  labs(title = "Volcano Plot", x = "Log2 Fold Change", y = "-Log10 Adjusted P-value")

```



```{r}
write.csv(as.data.frame(results_table), "deseq2_results.csv")

```

```{r}
rld <- rlog(dds) # or use vst(dds)
plotPCA(rld, intgroup = "experiment_identifier")
plotPCA(rld, intgroup = "cell_line")
```
```{r}
results_BIHi005_A_vs_BIHi001_B<- results(dds, contrast = c("cell_line", "BIHi005-A", "BIHi001-B")) |> as_tibble(rownames="gene")

results_BIHi005_A_vs_BIHi001_B |> arrange(padj)
```







